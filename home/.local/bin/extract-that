#!/usr/bin/env bash

# extract.sh - Comprehensively extract various archive formats

# Colors
GREEN="\033[1;32m"
RED="\033[1;31m"
CYAN="\033[0;36m"
RESET="\033[0m"

show_help() {
    echo -e "${CYAN}Smart Extractor Script${RESET}"
    echo -e "Usage: ${GREEN}extract.sh archive_file[.zip|.tar.gz|.zst|...]${RESET}"
    echo -e "\nThis script extracts:"
    echo -e "  - .zip"
    echo -e "  - .tar.gz, .tgz"
    echo -e "  - .tar.xz, .txz"
    echo -e "  - .tar.zst, .tzst"
    echo -e "  - .tar"
    echo -e "  - .zst, .xz, .gz (single files)"
    echo -e "\nInteractive prompt will ask for output directory preferences."
    echo -e "Use ${GREEN}-h${RESET} to show this help.\n"
}

if [[ "$1" == "-h" || "$1" == "--help" || -z "$1" ]]; then
    show_help
    exit 0
fi

FILE="$1"
BASENAME="$(basename -- "$FILE")"
EXT="${BASENAME##*.}"
NAME="${BASENAME%.*}"

# Ask for destination
echo -e "${CYAN}Where would you like to extract the file?${RESET}"
read -rp "Destination directory [default: current = './']: " DEST_DIR

if [[ -z $DEST_DIR ]]; then
    DEST_DIR="."
fi

# Ask for subdirectory usage
DEFAULT_SUBDIR="$(echo "$NAME" | sed 's/ /-/g')"
echo -e "${CYAN}Extract contents to a subdirectory?${RESET}"
read -rp "Subdirectory name [empty = extract directly, default: $DEFAULT_SUBDIR]: " SUBDIR

if [[ -n $SUBDIR ]]; then
    DEST_PATH="$DEST_DIR/$SUBDIR"
else
    if [[ -z $SUBDIR ]]; then
        DEST_PATH="$DEST_DIR"
    else
        DEST_PATH="$DEST_DIR/$DEFAULT_SUBDIR"
    fi
fi

mkdir -p "$DEST_PATH" || {
    echo -e "${RED}Failed to create destination directory!${RESET}"
    exit 1
}

# Extraction Logic
echo -e "${CYAN}>>> Extracting ${YELLOW}$FILE${CYAN} to ${GREEN}$DEST_PATH${CYAN}...${RESET}"

case "$FILE" in
    *.tar.gz|*.tgz)
        tar -xzf "$FILE" -C "$DEST_PATH"
        ;;
    *.tar.xz|*.txz)
        tar -xJf "$FILE" -C "$DEST_PATH"
        ;;
    *.tar.zst|*.tzst)
        zstd -cd "$FILE" | tar -xf - -C "$DEST_PATH"
        ;;
    *.tar)
        tar -xf "$FILE" -C "$DEST_PATH"
        ;;
    *.zip)
        unzip -q "$FILE" -d "$DEST_PATH"
        ;;
    *.zst)
        zstd -d -o "$DEST_PATH/${NAME}" "$FILE"
        ;;
    *.xz)
        xz -d -c "$FILE" > "$DEST_PATH/${NAME}"
        ;;
    *.gz)
        gunzip -c "$FILE" > "$DEST_PATH/${NAME}"
        ;;
    *)
        echo -e "${RED}Unsupported file type: $FILE${RESET}"
        exit 1
        ;;
esac

echo -e "${GREEN}âœ… Extraction complete!${RESET}"
